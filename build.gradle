/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */
plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.hidetake.ssh" version "2.11.2"
    id 'war'
}
repositories {

    mavenCentral()

}


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'mysql:mysql-connector-java:8.0.28'
    api 'javax.servlet:jsp-api:2.0'
    api 'jstl:jstl:1.2'

    api 'javax.servlet:javax.servlet-api:3.1.0'
    api 'com.fasterxml.jackson.core:jackson-core:2.14.0'
    api 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
    api 'com.fasterxml.jackson.core:jackson-annotations:2.14.0'
    api 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    api 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    api 'javax.mail:mail:1.4.7'

}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'happyhome Maven Webapp'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
repositories {
    mavenCentral()
    mavenLocal()
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
apply plugin: 'org.hidetake.ssh'
remotes {
    host {
        host = '34.143.252.234'
        user = 'g20130298'
        identity = file('C:/Users/Kien/.ssh/id_rsa')
    }
}
ssh.settings {
    knownHosts = allowAnyHosts
}
task docker_app_start {
    doLast {
        println 'begin docker_app_start'
        ssh.run {
            session(remotes.host) {
                execute 'docker stop tomcat9', ignoreError: true
                execute 'docker run -it --rm -d ' +
                        '--name tomcat9 ' +
                        '-v /usr/deploy:/usr/local/tomcat/webapps ' +
                        '-p 80:8080 ' +
                        'tomcat:9.0&'
            }
        }
    }
}
task docker_upload_file_to_server {
    doLast {
        println 'begin docker_upload_file_to_server'
        ssh.run {
            session(remotes.host) {
                remove '/usr/deploy/WebCNPM.war'
                remove '/usr/deploy/WebCNPM.war'
                put from: "${project.projectDir}/build/libs/happyhome-1.0-SNAPSHOT.war",
                        into: "/usr/deploy/WebCNPM.war"
            }
        }
    }
}

task docker_deploy {
    docker_deploy.dependsOn docker_app_start
    docker_deploy.dependsOn docker_upload_file_to_server
    docker_deploy.dependsOn build
    tasks.getByName('docker_app_start').mustRunAfter docker_upload_file_to_server
}
